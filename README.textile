h1. ElasticSearch.NET Client

h2. Requirements

version  0.16.0 or upper
thrift plugin enabled (non framed)

h2. Features
Thrift supported
ConnectionPool Supported
Multi-Cluster Supported


h2. Tutorial

h3. How to use

CreateIndex:
      ElasticSearchClient.Instance.CreateIndex("index", new IndexSetting(5, 1));

ModifyIndex:
      ElasticSearchClient.Instance.ModifyIndex(index, new IndexSetting(10, 2));

DeleteIndex:
      ElasticSearchClient.Instance.DeleteIndex("index");

CreateMapping:
      var index = "index_operate" + Guid.NewGuid().ToString();
			StringFieldSetting stringFieldSetting = new StringFieldSetting() { Analyzer = "standard", Type = "string", NullValue = "mystr" };

			TypeSetting typeSetting = new TypeSetting("custom_type");
			typeSetting.AddFieldSetting("medcl", stringFieldSetting);

			var typeSetting2 = new TypeSetting("hell_type1");
			var numfield = new NumberFieldSetting() { Store = Store.yes, NullValue = 0.00 };
			typeSetting2.AddFieldSetting("name", numfield);

			var result = ElasticSearchClient.Instance.PutMapping(index, typeSetting);



Index:
      ESClient.Instance.Index("testindex", "testtype", "testkey", "{\"a\":\"b\"}");
Search:
      ESClient.Instance.Search("testindex", "testtype", "_id:testkey");
Delete:
      ESClient.Instance.Delete("testindex", "testtype", "testkey");
Get:
      ESClient.Instance.Get("testindex", "testtype", "testkey");

check my tests to see more examples!

or your can make a wrapper on top of it,and this is what i do